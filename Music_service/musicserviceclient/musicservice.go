// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5
// Source: music_service.proto

package musicserviceclient

import (
	"context"

	"Music_service/music_service"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	LoginRequest    = music_service.LoginRequest
	LoginResponse   = music_service.LoginResponse
	SendSmsRequest  = music_service.SendSmsRequest
	SendSmsResponse = music_service.SendSmsResponse

	MusicService interface {
		SendSms(ctx context.Context, in *SendSmsRequest, opts ...grpc.CallOption) (*SendSmsResponse, error)
		Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	}

	defaultMusicService struct {
		cli zrpc.Client
	}
)

func NewMusicService(cli zrpc.Client) MusicService {
	return &defaultMusicService{
		cli: cli,
	}
}

func (m *defaultMusicService) SendSms(ctx context.Context, in *SendSmsRequest, opts ...grpc.CallOption) (*SendSmsResponse, error) {
	client := music_service.NewMusicServiceClient(m.cli.Conn())
	return client.SendSms(ctx, in, opts...)
}

func (m *defaultMusicService) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	client := music_service.NewMusicServiceClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}
